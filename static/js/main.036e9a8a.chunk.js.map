{"version":3,"sources":["App/constants/apiConstants.js","App/constants/svgConstants.js","App/components/DropBlock/DropBlock.js","App/components/SellBuyItem/SellBuyItem.js","App/components/ExchangePage/ExchangePage.js","App/hooks/usePrevious.js","App/components/ConfirmPage/ConfirmPage.js","App/components/SuccessPage/SuccessPage.js","App/App.js","index.js"],"names":["API_BASE_URL","DROP_ARROW_SVG","width","height","viewBox","fill","xmlns","d","LOADER_SVG","opacity","SUCCESS_SVG","DropBlock","itemsDefault","items","activeItem","onItemClick","useMemo","filter","id","activeItemTitle","name","useState","showDrop","setShowDrop","className","onClick","map","item","key","defaultProps","SellBuyItem","activeMethod","title","onInputChange","inputValue","isLoad","inputName","type","placeholder","onChange","value","ExchangePage","activeInvoiceMethod","activeWithdrawMethod","invoiceValue","withdrawValue","setActiveInvoiceMethod","setActiveWithdrawMethod","setInvoiceValue","setWithdrawValue","setActivePage","invoice","withdraw","payMethods","setPayMethods","useEffect","fetch","method","headers","then","data","json","isInvoiceLoad","setIsInvoiceLoad","isWithdrawLoad","setIsWithdrawLoad","lastRequestChanges","setLastRequestChanges","target","previousState","ref","useRef","current","usePrevious","activeInvoiceMethodId","activeWithdrawMethodId","base","onLoadFunc","setAmountFunc","params","amount","invoicePayMethod","withdrawPayMethod","url","URL","search","URLSearchParams","toString","controller","AbortController","signal","catch","e","console","log","abort","sellbuyItems","showOpacityBlock","length","args","getValueTitle","includes","split","whole","fractional","slice","ConfirmPage","resetData","setIsLoad","infoItems","description","body","JSON","stringify","message","activeInvoiceMethodName","activeWithdrawMethodName","SuccessPage","App","activePage","useCallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.036e9a8a.chunk.js","sourcesContent":["export const API_BASE_URL = \"https://involve.software/test_front/api\";\r\n","import React from \"react\";\r\n\r\nexport const DROP_ARROW_SVG = (\r\n  <svg\r\n    width=\"10\"\r\n    height=\"6\"\r\n    viewBox=\"0 0 10 6\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M5 6L0 0L10 9.08524e-07L5 6Z\" fill=\"#3A3A3A\" />\r\n  </svg>\r\n);\r\n\r\nexport const LOADER_SVG = (\r\n  <svg\r\n    width=\"18\"\r\n    height=\"18\"\r\n    viewBox=\"0 0 18 18\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M7.27454 0.16759L8.06904 3.17481C8.67763 3.07954 9.29768 3.07954 9.90627 3.17481L10.7131 0.16759C9.57355 -0.0558632 8.40169 -0.0558632 7.2621 0.16759C7.26213 0.16759 7.27454 0.16759 7.27454 0.16759Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.9\"\r\n      d=\"M11.1165 3.49758C11.6925 3.72104 12.2288 4.0354 12.7054 4.42862L14.8965 2.21277C14.0232 1.44868 13.009 0.862451 11.911 0.487265L11.1165 3.49758Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.8\"\r\n      d=\"M13.5838 5.29449C13.977 5.77117 14.2913 6.30744 14.5148 6.88344L17.5251 6.07654C17.1447 4.98195 16.5544 3.97209 15.7872 3.10345L13.5838 5.29449Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.7\"\r\n      d=\"M14.8966 8.99998C14.8972 9.31157 14.8733 9.62316 14.8252 9.93103L17.8324 10.7379C18.0559 9.59834 18.0559 8.42648 17.8324 7.28689L14.8252 8.06898C14.8733 8.37712 14.8972 8.68839 14.8966 8.99998Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.6\"\r\n      d=\"M13.5837 12.7055L15.7872 14.8966C16.5513 14.0232 17.1375 13.0091 17.5127 11.9111L14.5023 11.1041C14.2839 11.6835 13.9736 12.2245 13.5837 12.7055Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.5\"\r\n      d=\"M11.1165 14.5024L11.9234 17.5127C13.017 17.136 14.0269 16.5497 14.8965 15.7872L12.693 13.5838C12.2194 13.9714 11.6872 14.2814 11.1165 14.5024Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.4\"\r\n      d=\"M7.27455 17.8324C8.41414 18.0558 9.586 18.0558 10.7256 17.8324L9.93109 14.8251C9.3225 14.9204 8.70245 14.9204 8.09386 14.8251L7.27455 17.8324Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.3\"\r\n      d=\"M3.10359 15.7872C3.97691 16.5513 4.99109 17.1376 6.08909 17.5127L6.896 14.5024C6.32 14.2789 5.78372 13.9646 5.30704 13.5713L3.10359 15.7872Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.2\"\r\n      d=\"M0.487066 11.9234C0.863835 13.0171 1.45006 14.0269 2.21257 14.8965L4.41602 12.6931C4.02279 12.2164 3.70843 11.6801 3.48497 11.1041L0.487066 11.9234Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.1\"\r\n      d=\"M2.6226e-06 8.99998C-0.00122786 9.57939 0.0549161 10.1573 0.167591 10.7255L3.1748 9.93099C3.07953 9.3224 3.07953 8.70235 3.1748 8.09376L0.167591 7.28686C0.0558655 7.85111 -0.000313759 8.42493 2.6226e-06 8.99998Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.1\"\r\n      d=\"M0.487072 6.07653L3.49743 6.88344C3.72088 6.30744 4.03524 5.77117 4.42847 5.29448L2.22502 3.09103C1.45661 3.9634 0.86602 4.97762 0.487072 6.07653Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n    <path\r\n      opacity=\"0.1\"\r\n      d=\"M3.10359 2.21277L5.30704 4.41622C5.78372 4.02299 6.32 3.70863 6.896 3.48518L6.08909 0.474821C4.99018 0.854086 3.97596 1.44436 3.10359 2.21277Z\"\r\n      fill=\"#3E7E7C\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const SUCCESS_SVG = (\r\n  <svg\r\n    width=\"84\"\r\n    height=\"92\"\r\n    viewBox=\"0 0 84 92\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path\r\n      d=\"M39.6544 90.7058C41.0019 91.4254 42.6931 91.4208 44.0406 90.7013C80.7623 70.9746 83.3702 32.4333 83.3381 21.4746C83.3346 20.5938 83.0743 19.7332 82.5891 18.9981C82.104 18.2629 81.4149 17.6853 80.6064 17.3358L43.7106 0.991668C43.1234 0.732845 42.4887 0.599556 41.847 0.600345C41.2053 0.601135 40.5709 0.735985 39.9844 0.996251L3.34518 17.3404C2.54858 17.6901 1.86929 18.2613 1.38822 18.9862C0.90716 19.711 0.644609 20.5589 0.631848 21.4288C0.476015 32.3325 2.67143 70.9563 39.6544 90.7058ZM26.7568 38.1763L37.2664 48.6858L56.9427 29.0096L63.4235 35.4904L37.2664 61.6475L20.276 44.6571L26.7568 38.1763Z\"\r\n      fill=\"#58B4AE\"\r\n    />\r\n  </svg>\r\n);\r\n","import React, { useMemo, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DROP_ARROW_SVG } from \"../../constants/svgConstants\";\r\n\r\nimport \"./DropBlock.scss\";\r\n\r\nfunction DropBlock({ items: itemsDefault, activeItem, onItemClick }) {\r\n  const items = useMemo(\r\n    () => itemsDefault.filter(({ id }) => id !== activeItem.id),\r\n    [itemsDefault, activeItem.id]\r\n  );\r\n\r\n  const activeItemTitle = useMemo(() => {\r\n    if (!activeItem || !activeItem.id) return \"Select currency\";\r\n\r\n    return activeItem.name;\r\n  }, [activeItem]);\r\n\r\n  const [showDrop, setShowDrop] = useState(false);\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button\r\n        className={`dropdown__button ${\r\n          showDrop ? \"dropdown__button_active\" : \"\"\r\n        }`}\r\n        onClick={() => {\r\n          setShowDrop(!showDrop);\r\n        }}\r\n      >\r\n        <span>{activeItemTitle}</span> {DROP_ARROW_SVG}\r\n      </button>\r\n\r\n      {showDrop && (\r\n        <div className=\"dropdown__items-block\">\r\n          {items.map((item) => (\r\n            <button\r\n              key={item.id}\r\n              className=\"dropdown__item\"\r\n              onClick={() => {\r\n                onItemClick(item);\r\n                setShowDrop(false);\r\n              }}\r\n            >\r\n              {item.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nDropBlock.propTypes = {\r\n  items: PropTypes.array,\r\n  activeItem: PropTypes.object,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nDropBlock.defaultProps = {\r\n  items: [],\r\n  activeItem: {},\r\n  onItemClick: () => {},\r\n};\r\n\r\nexport default DropBlock;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LOADER_SVG } from \"../../constants/svgConstants\";\r\nimport DropBlock from \"../DropBlock/DropBlock\";\r\n\r\nimport \"./SellBuyItem.scss\";\r\n\r\nfunction SellBuyItem({\r\n  items,\r\n  activeMethod,\r\n  onItemClick,\r\n  title,\r\n  onInputChange,\r\n  inputValue,\r\n  isLoad,\r\n  inputName,\r\n}) {\r\n  return (\r\n    <div className=\"sellbuy-item\">\r\n      <h3 className=\"exchange__title sellbuy-item__title\">{title}</h3>\r\n\r\n      <DropBlock\r\n        items={items}\r\n        activeItem={activeMethod}\r\n        onItemClick={onItemClick}\r\n      />\r\n\r\n      <div className=\"sellbuy-iteme__input-block\">\r\n        <input\r\n          type=\"number\"\r\n          name={inputName}\r\n          className=\"sellbuy-item__money-input\"\r\n          placeholder=\"00.00\"\r\n          onChange={onInputChange}\r\n          value={inputValue}\r\n        />\r\n        {isLoad && (\r\n          <span className=\"currency-exchange__loader-wrapper\">\r\n            {LOADER_SVG}\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSellBuyItem.propTypes = {\r\n  title: PropTypes.string,\r\n  inputName: PropTypes.string,\r\n  inputValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  isLoad: PropTypes.bool,\r\n  activeMethod: PropTypes.object,\r\n  items: PropTypes.array,\r\n  onInputChange: PropTypes.func,\r\n  onItemClick: PropTypes.func,\r\n};\r\n\r\nSellBuyItem.defaultProps = {\r\n  title: \"\",\r\n  inputName: \"\",\r\n  inputValue: \"\",\r\n  isLoad: false,\r\n  activeMethod: {},\r\n  items: [],\r\n  onInputChange: () => {},\r\n  onItemClick: () => {},\r\n};\r\n\r\nexport default SellBuyItem;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { API_BASE_URL } from \"../../constants/apiConstants\";\r\n\r\nimport SellBuyItem from \"../SellBuyItem/SellBuyItem\";\r\n\r\nimport \"./ExchangePage.scss\";\r\nimport { LOADER_SVG } from \"../../constants/svgConstants\";\r\nimport usePrevious from \"../../hooks/usePrevious\";\r\n\r\nfunction ExchangePage({\r\n  activeInvoiceMethod,\r\n  activeWithdrawMethod,\r\n  invoiceValue,\r\n  withdrawValue,\r\n  setActiveInvoiceMethod,\r\n  setActiveWithdrawMethod,\r\n  setInvoiceValue,\r\n  setWithdrawValue,\r\n  setActivePage,\r\n}) {\r\n  const [payMethods, setPayMethods] = useState({ invoice: [], withdraw: [] });\r\n  useEffect(() => {\r\n    fetch(`${API_BASE_URL}/payMethods`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        setPayMethods(data);\r\n        return data;\r\n      });\r\n  }, []);\r\n\r\n  // меняем выбраную валюту при нажатии ел в dropdown\r\n  const onInvoiceClick = (item) => {\r\n    // Если выбраная валюта такая же как в блоке buy\r\n    // меняем их местами\r\n    if (item.id === activeWithdrawMethod.id) {\r\n      setActiveWithdrawMethod(activeInvoiceMethod);\r\n      setActiveInvoiceMethod(item);\r\n      return;\r\n    }\r\n\r\n    setActiveInvoiceMethod(item);\r\n  };\r\n  const onWithdrawClick = (item) => {\r\n    // Если выбраная валюта такая же как в блоке sell\r\n    // меняем их местами\r\n    if (item.id === activeInvoiceMethod.id) {\r\n      setActiveInvoiceMethod(activeWithdrawMethod);\r\n      setActiveWithdrawMethod(item);\r\n      return;\r\n    }\r\n\r\n    setActiveWithdrawMethod(item);\r\n  };\r\n\r\n  // Идет ли загрузка данных о пересчете курса\r\n  const [isInvoiceLoad, setIsInvoiceLoad] = useState(false);\r\n  const [isWithdrawLoad, setIsWithdrawLoad] = useState(false);\r\n\r\n  // Поле для сравнения предыдущего результата запроса\r\n  // (чтобы не создавался новый запрос после обновления количества валюты)\r\n  const [lastRequestChanges, setLastRequestChanges] = useState({});\r\n  // Меняем поля курса валюты при изменении количества валюты\r\n  const onInputChange = ({ target: { value, name } }) => {\r\n    if (name === \"invoice\") {\r\n      setInvoiceValue(value);\r\n    } else if (name === \"withdraw\") {\r\n      setWithdrawValue(value);\r\n    }\r\n  };\r\n\r\n  const previousState = usePrevious({\r\n    activeInvoiceMethodId: activeInvoiceMethod.id,\r\n    activeWithdrawMethodId: activeWithdrawMethod.id,\r\n    invoiceValue,\r\n    withdrawValue,\r\n  });\r\n  // Пересчитываем курс валюты при изменении типа валюты\r\n  useEffect(() => {\r\n    if (\r\n      !activeInvoiceMethod.id ||\r\n      !activeWithdrawMethod.id ||\r\n      (!invoiceValue && !withdrawValue)\r\n    )\r\n      return;\r\n\r\n    let base = \"invoice\";\r\n    //  Если поле SELL пустое а BUY нет то просчитываем поле SELL\r\n    if (!invoiceValue) base = \"withdraw\";\r\n    // Если значение курса в поле изменилось после запроса новый запрос не делаем\r\n    if (withdrawValue !== previousState.withdrawValue) {\r\n      base = \"withdraw\";\r\n      if (\r\n        lastRequestChanges.type === \"invoice\" &&\r\n        withdrawValue === lastRequestChanges.value\r\n      )\r\n        return;\r\n    } else if (\r\n      invoiceValue !== previousState.invoiceValue &&\r\n      lastRequestChanges.type === \"withdraw\" &&\r\n      invoiceValue === lastRequestChanges.value\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const onLoadFunc =\r\n      base === \"invoice\" ? setIsWithdrawLoad : setIsInvoiceLoad;\r\n    const setAmountFunc =\r\n      base === \"invoice\" ? setWithdrawValue : setInvoiceValue;\r\n    const params = {\r\n      base,\r\n      amount: base === \"invoice\" ? +invoiceValue : +withdrawValue,\r\n      invoicePayMethod: activeInvoiceMethod.id,\r\n      withdrawPayMethod: activeWithdrawMethod.id,\r\n    };\r\n\r\n    let url = new URL(`${API_BASE_URL}/payMethods/calculate`);\r\n    url.search = new URLSearchParams(params).toString();\r\n\r\n    onLoadFunc(true);\r\n\r\n    let controller = new AbortController();\r\n    fetch(url, {\r\n      method: \"GET\",\r\n      signal: controller.signal,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then(({ amount }) => {\r\n        onLoadFunc(false);\r\n        setLastRequestChanges({ type: base, value: amount });\r\n        setAmountFunc(amount);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n    // обрываем запрос\r\n    return () => {\r\n      onLoadFunc(false);\r\n      controller.abort();\r\n    };\r\n  }, [\r\n    activeInvoiceMethod.id,\r\n    activeWithdrawMethod.id,\r\n    invoiceValue,\r\n    withdrawValue,\r\n  ]);\r\n\r\n  const sellbuyItems = [\r\n    {\r\n      inputName: \"invoice\",\r\n      items: payMethods.invoice,\r\n      activeMethod: activeInvoiceMethod,\r\n      onItemClick: onInvoiceClick,\r\n      title: \"Sell\",\r\n      inputValue: invoiceValue,\r\n      isLoad: isInvoiceLoad,\r\n    },\r\n    {\r\n      inputName: \"withdraw\",\r\n      items: payMethods.withdraw,\r\n      activeMethod: activeWithdrawMethod,\r\n      onItemClick: onWithdrawClick,\r\n      title: \"Buy\",\r\n      inputValue: withdrawValue,\r\n      isLoad: isWithdrawLoad,\r\n    },\r\n  ];\r\n\r\n  const showOpacityBlock = useMemo(\r\n    () => !!(!payMethods.invoice.length && !payMethods.withdraw.length),\r\n    [payMethods]\r\n  );\r\n\r\n  return (\r\n    <div className=\"exchange__block currency-exchange\">\r\n      {showOpacityBlock && (\r\n        <div className=\"currency-exchange__opacity-block\"></div>\r\n      )}\r\n\r\n      <div className=\"currency-exchange__sellbuy-wrapper\">\r\n        {sellbuyItems.map((args) => (\r\n          <SellBuyItem\r\n            key={args.inputName}\r\n            {...args}\r\n            onInputChange={onInputChange}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"currency-exchange__button-block\">\r\n        <button\r\n          onClick={() => {\r\n            setActivePage(2);\r\n          }}\r\n          className=\"exchange__main-button\"\r\n        >\r\n          {showOpacityBlock ? (\r\n            <span className=\"exchange__loader-animation\">{LOADER_SVG}</span>\r\n          ) : (\r\n            \"Exchange\"\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nExchangePage.propTypes = {\r\n  activeInvoiceMethod: PropTypes.object,\r\n  activeWithdrawMethod: PropTypes.object,\r\n  invoiceValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  withdrawValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  setActiveInvoiceMethod: PropTypes.func,\r\n  setActiveWithdrawMethod: PropTypes.func,\r\n  setInvoiceValue: PropTypes.func,\r\n  setWithdrawValue: PropTypes.func,\r\n  setActivePage: PropTypes.func,\r\n};\r\n\r\nExchangePage.defaultProps = {\r\n  activeInvoiceMethod: {},\r\n  activeWithdrawMethod: {},\r\n  invoiceValue: \"\",\r\n  withdrawValue: \"\",\r\n  setActiveInvoiceMethod: () => {},\r\n  setActiveWithdrawMethod: () => {},\r\n  setInvoiceValue: () => {},\r\n  setWithdrawValue: () => {},\r\n  setActivePage: () => {},\r\n};\r\n\r\nexport default ExchangePage;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport default function usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ConfirmPage.scss\";\r\n\r\nimport { API_BASE_URL } from \"../../constants/apiConstants\";\r\nimport { LOADER_SVG } from \"../../constants/svgConstants\";\r\n\r\nconst getValueTitle = (value) => {\r\n  if (!(\"\" + value).includes(\".\")) return `${value}.00`;\r\n\r\n  const [whole, fractional] = (\"\" + value).split(\".\");\r\n  return `${whole}.${(fractional + \"00\").slice(0, 2)}`;\r\n};\r\n\r\nfunction ConfirmPage({\r\n  activeInvoiceMethod,\r\n  activeWithdrawMethod,\r\n  invoiceValue,\r\n  withdrawValue,\r\n  resetData,\r\n  setActivePage,\r\n}) {\r\n  const [isLoad, setIsLoad] = useState(false);\r\n  const onConfirmClick = () => {\r\n    setIsLoad(true);\r\n    fetch(`${API_BASE_URL}/bids`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        amount: invoiceValue,\r\n        base: \"invoice\",\r\n        invoicePayMethod: activeInvoiceMethod.id,\r\n        withdrawPayMethod: activeWithdrawMethod.id,\r\n      }),\r\n    })\r\n      .then((data) => data.json())\r\n      .then(({ message }) => {\r\n        setIsLoad(false);\r\n        // Если статус успешный переходим на страницу успешной заявки\r\n        if (message === \"Success\") {\r\n          setActivePage(3);\r\n          resetData();\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        setIsLoad(false);\r\n      });\r\n  };\r\n\r\n  const infoItems = [\r\n    {\r\n      title: \"Sell\",\r\n      description: `${getValueTitle(invoiceValue)} ${\r\n        activeInvoiceMethod.name || \"\"\r\n      }`,\r\n    },\r\n    {\r\n      title: \"Buy\",\r\n      description: `${getValueTitle(withdrawValue)} ${\r\n        activeWithdrawMethod.name || \"\"\r\n      }`,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"exchange__block details-page\">\r\n      {isLoad && <div className=\"currency-exchange__opacity-block\"></div>}\r\n      <h3 className=\"exchange__title details-page__title\">Details</h3>\r\n\r\n      <div className=\"details-page__info-block\">\r\n        {infoItems.map(({ title, description }) => (\r\n          <div key={title} className=\"details-page__info-item\">\r\n            <p className=\"details-page__info-title\">{title}</p>\r\n            <p className=\"details-page__info-description\">{description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"details-page__buttons-block\">\r\n        <button\r\n          onClick={() => {\r\n            setActivePage(1);\r\n          }}\r\n          className=\"exchange__second-button details-page__button\"\r\n        >\r\n          Cencel\r\n        </button>\r\n        <button\r\n          onClick={onConfirmClick}\r\n          className=\"exchange__main-button details-page__button\"\r\n        >\r\n          {isLoad ? (\r\n            <span className=\"exchange__loader-animation\">{LOADER_SVG}</span>\r\n          ) : (\r\n            \"Confirm\"\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nConfirmPage.propTypes = {\r\n  activeInvoiceMethod: PropTypes.object,\r\n  activeWithdrawMethod: PropTypes.object,\r\n  invoiceValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  withdrawValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  resetData: PropTypes.func,\r\n  setActivePage: PropTypes.func,\r\n};\r\n\r\nConfirmPage.defaultProps = {\r\n  activeInvoiceMethodName: \"\",\r\n  activeWithdrawMethodName: \"\",\r\n  invoiceValue: \"\",\r\n  withdrawValue: \"\",\r\n  resetData: () => {},\r\n  setActivePage: () => {},\r\n};\r\n\r\nexport default ConfirmPage;\r\n","import React from \"react\";\r\n\r\nimport { SUCCESS_SVG } from \"../../constants/svgConstants\";\r\n\r\nimport \"./SuccessPage.scss\";\r\n\r\nfunction SuccessPage({ setActivePage }) {\r\n  return (\r\n    <div className=\"exchange__block success-page\">\r\n      <div className=\"success-page__img-block\">{SUCCESS_SVG}</div>\r\n\r\n      <h3 className=\"success-page__title\">Success!</h3>\r\n      <p className=\"success-page__description\">\r\n        Your exchange order has been placed successfully and will be processed\r\n        soon.\r\n      </p>\r\n\r\n      <button\r\n        onClick={() => {\r\n          setActivePage(1);\r\n        }}\r\n        className=\"exchange__main-button\"\r\n      >\r\n        Home\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SuccessPage;\r\n","import React, { useCallback, useState } from \"react\";\r\n\r\nimport ExchangePage from \"./components/ExchangePage/ExchangePage\";\r\n// import TimeBlock from \"./components/TimeBlock\";\r\n\r\nimport \"./App.scss\";\r\nimport ConfirmPage from \"./components/ConfirmPage/ConfirmPage\";\r\nimport SuccessPage from \"./components/SuccessPage/SuccessPage\";\r\n\r\nconst App = () => {\r\n  const [activePage, setActivePage] = useState(1);\r\n\r\n  // выбранная валюта\r\n  const [activeInvoiceMethod, setActiveInvoiceMethod] = useState({});\r\n  const [activeWithdrawMethod, setActiveWithdrawMethod] = useState({});\r\n\r\n  // Значения валют в input\r\n  const [invoiceValue, setInvoiceValue] = useState(\"\");\r\n  const [withdrawValue, setWithdrawValue] = useState(\"\");\r\n\r\n  const resetData = useCallback(() => {\r\n    setActiveInvoiceMethod({});\r\n    setActiveWithdrawMethod({});\r\n    setInvoiceValue(\"\");\r\n    setWithdrawValue(\"\");\r\n  }, []);\r\n  return (\r\n    <div className=\"exchange\">\r\n      {activePage === 1 && (\r\n        <ExchangePage\r\n          activeInvoiceMethod={activeInvoiceMethod}\r\n          activeWithdrawMethod={activeWithdrawMethod}\r\n          invoiceValue={invoiceValue}\r\n          withdrawValue={withdrawValue}\r\n          setActiveInvoiceMethod={setActiveInvoiceMethod}\r\n          setActiveWithdrawMethod={setActiveWithdrawMethod}\r\n          setInvoiceValue={setInvoiceValue}\r\n          setWithdrawValue={setWithdrawValue}\r\n          setActivePage={setActivePage}\r\n        />\r\n      )}\r\n\r\n      {activePage === 2 && (\r\n        <ConfirmPage\r\n          activeInvoiceMethod={activeInvoiceMethod}\r\n          activeWithdrawMethod={activeWithdrawMethod}\r\n          invoiceValue={invoiceValue}\r\n          withdrawValue={withdrawValue}\r\n          resetData={resetData}\r\n          setActivePage={setActivePage}\r\n        />\r\n      )}\r\n\r\n      {activePage === 3 && <SuccessPage setActivePage={setActivePage} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.scss\";\r\nimport \"./styles/reset.css\";\r\n\r\nimport App from \"./App/App\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}